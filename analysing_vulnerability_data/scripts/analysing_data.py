import pandas as pd
import json 

with open("./analysing_vulnerability_data/input_data/results.json") as file_to_open:
    data = file_to_open.read()
json_data = json.loads(data)

print(json_data.keys())

# ## Get Packages Data

# CSV Schema for vulnerability data:
# |id |title|description|cwe|cve|severity|epss.cve|epss.epss|epss.percentile|epss.date|
# |---|-----|-----------|---|---|--------|--------|---------|---------------|---------|
# |   |     |           |   |   |        |        |         |               |         |
# 

package_vulnerability_raw_data = json_data.get("packages")
vulnerability_to_df = pd.DataFrame(package_vulnerability_raw_data)
vulnerability_df_filtered = vulnerability_to_df.map(lambda x: x[0] if isinstance(x, list) else x)

# normalized_coordinates_data = vulnerability_df_filtered['coordinates']
# normalized_vulnerability_data = pd.json_normalize(vulnerability_df_filtered['vulnerabilities'])

normalized_vulnerability_data = pd.json_normalize(package_vulnerability_raw_data)

df_dict = pd.json_normalize(normalized_vulnerability_data['vulnerabilities'].explode()).reset_index()

df_final = normalized_vulnerability_data.drop('vulnerabilities', axis=1).join(df_dict.set_index('index'))
df_final

df_final['componentname']=df_final['coordinates'].str.extract(r'pkg:[a-zA-Z]*/([a-zA-Z.]*)@[0-9.]*')

# ## Import component location data

with open("./analysing_vulnerability_data/input_data/component_by_file.json") as file_to_open:
    data = file_to_open.read()
json_data = json.loads(data)

json_data.keys()

print(type(json_data))

# test = pd.DataFrame.from_dict(json_data['summary'], orient='index')
test = pd.DataFrame.from_dict(json_data,orient='index')

# Reset the index to make it a column
test.reset_index(inplace=True)

# Rename the columns
test.columns = ['sbom_name'] + list(test.columns[1:])

df_melted = test.melt(id_vars='sbom_name', value_vars=test.columns[1:], value_name='componentname')

# Drop the 'Variable' column
df_melted.drop('variable', axis=1, inplace=True)
# Drop rows with 'None' values
df_melted.dropna(inplace=True)
df_melted.drop_duplicates(inplace=True)
df_melted.sort_values(by='sbom_name', inplace=True)

df_melted = df_melted.reset_index(drop=True)
## Merge tables

join_table = df_final.merge(df_melted, on='componentname', how='left')
join_table.to_csv('./analysing_vulnerability_data/results/vulnerability_report.csv')


## Get Summary Data
summary_raw_data = json_data.get("summary")
summary_to_df = pd.DataFrame(summary_raw_data, index=[0])

summary_to_df
summary_to_df.to_csv('./analysing_vulnerability_data/results/summary_report.csv')