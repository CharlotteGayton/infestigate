import pandas as pd
import json 

with open("./analysing_vulnerability_data/input_data/list_of_files.json") as list_of_files:
    files = list_of_files.read()
json_files = json.loads(files)

df = pd.DataFrame(columns=['Target', 'Class', 'Type', 'VulnerabilityID', 'PkgID', 'PkgName',
       'InstalledVersion', 'FixedVersion', 'Status', 'SeveritySource',
       'PrimaryURL', 'Title', 'Description', 'Severity', 'References',
       'PublishedDate', 'LastModifiedDate', 'PkgIdentifier.PURL',
       'DataSource.ID', 'DataSource.Name', 'DataSource.URL',
       'VendorSeverity.ghsa', 'CVSS.ghsa.V3Vector', 'CVSS.ghsa.V3Score',
       'VendorSeverity.alma', 'VendorSeverity.amazon',
       'VendorSeverity.bitnami', 'VendorSeverity.oracle-oval',
       'VendorSeverity.redhat', 'VendorSeverity.rocky',
       'CVSS.bitnami.V3Vector', 'CVSS.bitnami.V3Score', 'CVSS.redhat.V3Vector',
       'CVSS.redhat.V3Score', 'VendorSeverity.ubuntu', 'CweIDs',
       'VendorSeverity.nvd', 'CVSS.nvd.V2Vector', 'CVSS.nvd.V3Vector',
       'CVSS.nvd.V2Score', 'CVSS.nvd.V3Score', 'sbom_name'])

# df = pd.DataFrame()

for each in json_files:
    with open(f"./analysing_vulnerability_data/input_data/scanned_sboms/{each}") as file_to_open:
        data = file_to_open.read()
    json_data = json.loads(data)

    if "Results" in json_data:

        package_vulnerability_raw_data = json_data.get("Results")[0]
        vulnerability_to_df = pd.DataFrame(package_vulnerability_raw_data)
        vulnerability_df_filtered = vulnerability_to_df.map(lambda x: x[0] if isinstance(x, list) else x)

        df_dict = pd.json_normalize(vulnerability_to_df['Vulnerabilities'])
        df_final = vulnerability_to_df.drop('Vulnerabilities', axis=1).join(df_dict)

        df_final['sbom_name'] = json_data.get('ArtifactName').split('/')[-1]

        df = pd.concat([df, df_final], ignore_index=True)

df.to_csv('./analysing_vulnerability_data/results/vulnerability_report.csv')
df.to_json('./analysing_vulnerability_data/results/vulnerability_report.json', orient='records')

# Generate summary 

summary_df = df["Severity"].value_counts()

summary_df.to_csv('./analysing_vulnerability_data/results/summary_report.csv')
summary_df.to_json('./analysing_vulnerability_data/results/summary_report.json')

# summary_raw_data = json_data.get("summary")
# summary_to_df = pd.DataFrame(summary_raw_data, index=[0])

# summary_to_df

# summary_to_df.to_csv('../results/summary_report.csv')
# summary_to_df.to_json('../results/summary_report.json')


