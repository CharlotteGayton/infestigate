{
	"meta": {
		"generator": "bomber",
		"url": "https://github.com/devops-kung-fu/bomber",
		"version": "0.4.4",
		"provider": "osv",
		"date": "2023-11-22T15:24:24.884201Z"
	},
	"files": [
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.AzureFunctionsKeepAlive.sbom-20230731145443527.json",
			"sha256": "fb01f1723d9fdea3f0a8f0c1b163f5f6095e13454b0021b6c0e78eccababf655"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.AzureFunctionsKeepAlive.sbom-20230925023013487.json",
			"sha256": "f54cf8d95c081afc6f7dab5a1213ed9d39f3bbe17f03f5771e3d2d751a97744a"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.AzureFunctionsKeepAlive.sbom-20230926005207504.json",
			"sha256": "78763b5bd7f37e32a4469b85242c981fab457b6550a29f667efbd3cc7c748851"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.ContentHandling.sbom-20230803021854521.json",
			"sha256": "5103e971598a2c567490a80a694b4b96e22c6a4a498c594d176f8d325c395048"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.ContentHandling.sbom-20230927021312061.json",
			"sha256": "954d9f0b5bb786dee3cf05c18be6a5eadabd4c98aa57eabc4948b4549099b7af"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.ContentHandling.sbom-20230927022958777.json",
			"sha256": "fdada35ba8dc0c3d34c7d81dde9236aad01b711bd52fbe93d78be33800be1456"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Extensions.System.Text.Json.sbom-20230714141727393.json",
			"sha256": "e4f91404f747eca1938bc6c6e79f4b395e76b1673d4f7e2fba1ceb5d83d475db"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Extensions.System.Text.Json.sbom-20230731141202223.json",
			"sha256": "bb8789ba16264e062067894c2ffc50aed0575ab2a564d859c3e5d757c05e31e4"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Extensions.System.Text.Json.sbom-20230807133651423.json",
			"sha256": "2ea11d817057e37b3dc958eb904147eb2c8c665ade5cc07b8abf06b68d5e5420"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Extensions.sbom-20230925124952113.json",
			"sha256": "4b6c0f073f4c603632bdd4b1d26bec4f3439def7d1557699fac6db78bb9b80e2"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Extensions.sbom-20230925125539544.json",
			"sha256": "bd26453fcead6e9fa29f734c6c4eac9e9bff2c1338d59199bd42a00736070f50"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Extensions.sbom-20230927021217870.json",
			"sha256": "b48d0f2f75bc47b298fbd4ec6f4409444af2da59a7dc6838682d45fe94a0e9a6"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Globbing.sbom-20230925021641016.json",
			"sha256": "009b08a505c6a7e5943a21b7351ea29e2244ea47060b5abb4950d0a38255822a"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Globbing.sbom-20230927021755450.json",
			"sha256": "cfe4835c3bb296a19995360eab05d90286ee25116c75e4db791ecadc4e6032b4"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Globbing.sbom-20230927022310790.json",
			"sha256": "08a0ae58812092296e27488e0903264fbb9a2e0f9d53383b25d2abe9bc97f363"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Json.sbom-20230802021609249.json",
			"sha256": "cac37857613fe89ef1a3afebd7cbc0f89c6e47da15a1d0f9ef3aae39dcf6ab80"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Json.sbom-20230803021801566.json",
			"sha256": "350f4d3afa5d0bb24c050123102a5337cbdadccfd9ffd12f0e70d1cb9fa3ad95"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Json.sbom-20230925021331846.json",
			"sha256": "d4e92d5b16ef74ef8eebcd91618698da69404d7806d4fbb63182bc5b6f102808"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.JsonSchema.sbom-20231018071822430.json",
			"sha256": "9d452ca2a397285ae6bb39659c9aa5f01de6b4deee4d24de0564c177fdd10fa0"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.JsonSchema.sbom-20231024080024899.json",
			"sha256": "d2362f31099d817a1e7ed3c80f7ebb2313b7a732ebd92fef376896f8f118a8ee"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.JsonSchema.sbom-20231025075047582.json",
			"sha256": "810ae8a1f8645d8eb630771563265d4f0f63a1a3d6ee0ced4a106231f70046fe"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Leasing.sbom-20231007124310090.json",
			"sha256": "eef064d5cddac329742d027fa4f8976d18de1e3dddeb2945aac4f55401341079"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Leasing.sbom-20231018133339741.json",
			"sha256": "620356233eb1a12b5c611c544f699c929778a93c7d02bb8c1a2c77b1502335ee"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Leasing.sbom-20231018133701514.json",
			"sha256": "83da0767018631636f8213871a63707b0da707aa6e85597f8281ea82fb7e9881"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Monitoring.sbom-20230925021343358.json",
			"sha256": "bffaacdd636ce548826e60d35a3085356a7f596831f3931613ecc992a06c0a74"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Monitoring.sbom-20230927021528451.json",
			"sha256": "c823360de50e1fb71ea96002043b6d2ee3506f44ca6bf9bba1b3bbdbed5f6e4d"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Monitoring.sbom-20230927021709610.json",
			"sha256": "303c412b96ce87bdb8b802b4e7b36be8f138c6f9ca645b5a62f91997d727f34a"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Retry.sbom-20230802021549215.json",
			"sha256": "e8c130250a41247b0b3e546efd3448e5ff741e45ecf894dedc1fe7a88327c15f"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Retry.sbom-20230925125954595.json",
			"sha256": "aefd2dee2214dc380165686ecfb8f26f68d11cb8fc5b703b6dc35498e39bd2e0"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.Retry.sbom-20230925130521136.json",
			"sha256": "36e85eaf05b4ee0e6dcd56bdef3490b4c3c6955765707dc7cd14e3b4b8aa0289"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.UriTemplates.sbom-20231013155844800.json",
			"sha256": "3dc742d3bd2ac88bdbebc76ca0007d4b5dd1a14c0fe59470436e5f9c11135e94"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.UriTemplates.sbom-20231024155652770.json",
			"sha256": "ace58f812fab7c9be7e6f81223e980ebfc0e5594e3f16883ca3d098cfc7b2faf"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Corvus.UriTemplates.sbom-20231026155117317.json",
			"sha256": "7f4bd3cfbd6d2a98fcee4b5647fbf42b3e4770e24b9cf03027cfbcb948ebc8d1"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Claims.sbom-20230925152701828.json",
			"sha256": "09ce01c777540099102a5630ed41a908725341769c97f0bec09f875a3fc1ca0b"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Claims.sbom-20231002161804330.json",
			"sha256": "a218a8ff1c8a403bfea2cb9f6efb61390b0a678cc3ff9dea849b21f0ec89102f"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Claims.sbom-20231002164058654.json",
			"sha256": "a9a2b596083907c35001889d5e9c7f956233e6f11c8e4fb7811b14a5bd5be05d"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Operations.sbom-20230925121312215.json",
			"sha256": "4b1b9e6080e6a86be25396e04a7c850ecf025da81b9dea02cdd11153b40abbec"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Operations.sbom-20230925121354442.json",
			"sha256": "d9319cbf79f3f4d2e3b57ab41c74e5f90323b1a4e44aabdf1d7a624e4eec4b62"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Operations.sbom-20230927022336918.json",
			"sha256": "5401737f1acd7d5b2c21011c4473a294e9226bf19aa45345ddbad4519d772490"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Tenancy.sbom-20230922163414724.json",
			"sha256": "4a130ac03d8386cbca8658c40a0a0c9c1c20762922af26e9f302b3d086fa5061"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Tenancy.sbom-20230925022435177.json",
			"sha256": "cb76263a6e8c8da0cdae07f6af39ca0eb138ffac5ac67d38610998c6fe1313b2"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Tenancy.sbom-20230925024911502.json",
			"sha256": "ae8d614da1757b148a7bebabc771578c371b687236b038e7cf987a3f115d67fd"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.TenantManagement.sbom-20230926083515409.json",
			"sha256": "72490ab967c5020b8fee4f59415ce8dac219c4ef2242e8d06155acd594e3d7f2"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.TenantManagement.sbom-20230927021739482.json",
			"sha256": "1063e4e423b953e566947a54b594546c9f43e1e5c1720c181459c28e98d3b65b"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.TenantManagement.sbom-20230927082242823.json",
			"sha256": "0952cfdb1c0fc3b7349087230067261416f7d90146890ed3244420e4f6527eff"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.UserNotifications.sbom-20230313115752967.json",
			"sha256": "e4d755d501e4df807c40fa5be272d18b85268ba2fde66563952fec428920cb71"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.UserNotifications.sbom-20230313122434134.json",
			"sha256": "853225982113733e8c0614d339042f72eb1862c23d725db0f58823366797aa28"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.UserNotifications.sbom-20230714140818507.json",
			"sha256": "5479a7ab57b8994ff052153296b4246f2ca1af34c6051fbdf578122d5012711e"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Workflow.sbom-20230913024351535.json",
			"sha256": "fb770e48f4f7fed45158bd13b6c178e587721401a152c61b6b82b0c3bee4171b"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Workflow.sbom-20231018030131154.json",
			"sha256": "81f76da45e8708a968b090e8e118a33e3e5d8e540195b2f96da1d461a5dbd1d4"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Marain.Workflow.sbom-20231020021055256.json",
			"sha256": "98349880cd02c8ed4a06f4f1191297e8c4d81d7348784c7fbd2960d4826c8a94"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Menes.sbom-20230927023952519.json",
			"sha256": "f573c4c782e242d44bb91e1783bb79a66f47b7f63730c7077bf7a2e32d29fa67"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Menes.sbom-20230927081724280.json",
			"sha256": "09b1e348f28d77cb4104d92feecf7f2c6961fe0813ffd2ae1126a70d0b68d68f"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/raw_flatterned/Menes.sbom-20231019081033177.json",
			"sha256": "5a59680e09513c90b753e02d600f1f739ca09e888239f289bd3bd99d42b30357"
		}
	],
	"summary": {
		"Unspecified": 0,
		"Low": 0,
		"Moderate": 2,
		"High": 12,
		"Critical": 2
	},
	"packages": [
		{
			"coordinates": "pkg:nuget/Microsoft.Rest.ClientRuntime@2.3.23",
			"vulnerabilities": [
				{
					"id": "CVE-2022-26907",
					"title": "Azure SDK for .NET Information Disclosure Vulnerability.",
					"description": "Azure SDK for .NET Information Disclosure Vulnerability via undisclosed methods relating to lack of sanitization of exception messages.",
					"cwe": "CWE-532",
					"cve": "CVE-2022-26907",
					"severity": "MODERATE",
					"epss": {
						"cve": "CVE-2022-26907",
						"epss": "0.005440000",
						"percentile": "0.747700000",
						"date": "2023-11-22"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Newtonsoft.Json@11.0.2",
			"vulnerabilities": [
				{
					"id": "CWE-755",
					"title": "Improper Handling of Exceptional Conditions in Newtonsoft.Json",
					"description": "Newtonsoft.Json prior to version 13.0.1 is vulnerable to Insecure Defaults due to improper handling of expressions with high nesting level that lead to StackOverFlow exception or high CPU and RAM usage. Exploiting this vulnerability results in Denial Of Service (DoS). \n\nThe serialization and deserialization path have different properties regarding the issue.\n\nDeserializing methods (like `JsonConvert.DeserializeObject`) will process the input that results in burning the CPU, allocating memory, and consuming a thread of execution. Quite high nesting level (\u003e10kk, or 9.5MB of `{a:{a:{...` input) is needed to achieve the latency over 10 seconds, depending on the hardware.\n\nSerializing methods (like `JsonConvert.Serialize` or `JObject.ToString`) will throw StackOverFlow exception with the nesting level of around 20k.\n\nTo mitigate the issue one either need to update Newtonsoft.Json to 13.0.1 or set `MaxDepth` parameter in the `JsonSerializerSettings`. This can be done globally with the following statement. After that the parsing of the nested input will fail fast with `Newtonsoft.Json.JsonReaderException`:\n\n``` \nJsonConvert.DefaultSettings = () =\u003e new JsonSerializerSettings { MaxDepth = 128 };\n```\n\nRepro code:\n```\n//Create a string representation of an highly nested object (JSON serialized)\nint nRep = 25000;\nstring json = string.Concat(Enumerable.Repeat(\"{a:\", nRep)) + \"1\" +\n string.Concat(Enumerable.Repeat(\"}\", nRep));\n\n//Parse this object (leads to high CPU/RAM consumption)\nvar parsedJson = JsonConvert.DeserializeObject(json);\n\n// Methods below all throw stack overflow with nRep around 20k and higher\n// string a = parsedJson.ToString();\n// string b = JsonConvert.SerializeObject(parsedJson);\n```\n\n### Additional affected product and version information\n**The original statement about the problem only affecting IIS applications is misleading.** Any application is affected, however the IIS has a behavior that stops restarting the instance after some time resulting in a harder-to-fix DoS.**",
					"cwe": "CWE-755",
					"severity": "HIGH",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Text.Encodings.Web@4.5.0",
			"vulnerabilities": [
				{
					"id": "BIT-2021-26701,BIT-dotnet-2021-26701,BIT-dotnet-sdk-2021-26701,CVE-2021-26701",
					"title": ".NET Core Remote Code Execution Vulnerability",
					"description": ".NET Core Remote Code Execution Vulnerability This CVE ID is unique from CVE-2021-24112.\n\n### Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1, and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA remote code execution vulnerability exists in .NET 5 and .NET Core due to how text encoding is performed.\n\n### Discussion\n\nDiscussion for this issue can be found at dotnet/runtime#49377\n\n### Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n### Affected software\n\nThe vulnerable package is `System.Text.Encodings.Web` . Upgrading your package and redeploying your app should be sufficient to address this vulnerability.\n\nVulnerable package versions:\n\nAny .NET 5, .NET Core, or .NET Framework based application that uses the System.Text.Encodings.Web package with a vulnerable version listed below.\n\nPackage Name | Vulnerable Versions | Secure Versions\n-|-|-\nSystem.Text.Encodings.Web | 4.0.0 - 4.5.0 | 4.5.1\nSystem.Text.Encodings.Web |  4.6.0-4.7.1 | 4.7.2\nSystem.Text.Encodings.Web | 5.0.0 |  5.0.1\n\n\nPlease validate that each of the .NET versions you are using is in support. Security updates are only provided for supported .NET versions.\n\n",
					"cve": "BIT-2021-26701,BIT-dotnet-2021-26701,BIT-dotnet-sdk-2021-26701,CVE-2021-26701",
					"severity": "CRITICAL",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Text.RegularExpressions@4.3.0",
			"vulnerabilities": [
				{
					"id": "CVE-2019-0820",
					"title": "Regular Expression Denial of Service in System.Text.RegularExpressions",
					"description": "A denial of service vulnerability exists when .NET Framework and .NET Core improperly process RegEx strings, aka '.NET Framework and .NET Core Denial of Service Vulnerability'. This CVE ID is unique from CVE-2019-0980, CVE-2019-0981.",
					"cwe": "CWE-1333,CWE-400",
					"cve": "CVE-2019-0820",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2019-0820",
						"epss": "0.001590000",
						"percentile": "0.523850000",
						"date": "2023-11-22"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Newtonsoft.Json@9.0.1",
			"vulnerabilities": [
				{
					"id": "CWE-755",
					"title": "Improper Handling of Exceptional Conditions in Newtonsoft.Json",
					"description": "Newtonsoft.Json prior to version 13.0.1 is vulnerable to Insecure Defaults due to improper handling of expressions with high nesting level that lead to StackOverFlow exception or high CPU and RAM usage. Exploiting this vulnerability results in Denial Of Service (DoS). \n\nThe serialization and deserialization path have different properties regarding the issue.\n\nDeserializing methods (like `JsonConvert.DeserializeObject`) will process the input that results in burning the CPU, allocating memory, and consuming a thread of execution. Quite high nesting level (\u003e10kk, or 9.5MB of `{a:{a:{...` input) is needed to achieve the latency over 10 seconds, depending on the hardware.\n\nSerializing methods (like `JsonConvert.Serialize` or `JObject.ToString`) will throw StackOverFlow exception with the nesting level of around 20k.\n\nTo mitigate the issue one either need to update Newtonsoft.Json to 13.0.1 or set `MaxDepth` parameter in the `JsonSerializerSettings`. This can be done globally with the following statement. After that the parsing of the nested input will fail fast with `Newtonsoft.Json.JsonReaderException`:\n\n``` \nJsonConvert.DefaultSettings = () =\u003e new JsonSerializerSettings { MaxDepth = 128 };\n```\n\nRepro code:\n```\n//Create a string representation of an highly nested object (JSON serialized)\nint nRep = 25000;\nstring json = string.Concat(Enumerable.Repeat(\"{a:\", nRep)) + \"1\" +\n string.Concat(Enumerable.Repeat(\"}\", nRep));\n\n//Parse this object (leads to high CPU/RAM consumption)\nvar parsedJson = JsonConvert.DeserializeObject(json);\n\n// Methods below all throw stack overflow with nRep around 20k and higher\n// string a = parsedJson.ToString();\n// string b = JsonConvert.SerializeObject(parsedJson);\n```\n\n### Additional affected product and version information\n**The original statement about the problem only affecting IIS applications is misleading.** Any application is affected, however the IIS has a behavior that stops restarting the instance after some time resulting in a harder-to-fix DoS.**",
					"cwe": "CWE-755",
					"severity": "HIGH",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Text.Encodings.Web@4.7.1",
			"vulnerabilities": [
				{
					"id": "BIT-2021-26701,BIT-dotnet-2021-26701,BIT-dotnet-sdk-2021-26701,CVE-2021-26701",
					"title": ".NET Core Remote Code Execution Vulnerability",
					"description": ".NET Core Remote Code Execution Vulnerability This CVE ID is unique from CVE-2021-24112.\n\n### Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1, and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA remote code execution vulnerability exists in .NET 5 and .NET Core due to how text encoding is performed.\n\n### Discussion\n\nDiscussion for this issue can be found at dotnet/runtime#49377\n\n### Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n### Affected software\n\nThe vulnerable package is `System.Text.Encodings.Web` . Upgrading your package and redeploying your app should be sufficient to address this vulnerability.\n\nVulnerable package versions:\n\nAny .NET 5, .NET Core, or .NET Framework based application that uses the System.Text.Encodings.Web package with a vulnerable version listed below.\n\nPackage Name | Vulnerable Versions | Secure Versions\n-|-|-\nSystem.Text.Encodings.Web | 4.0.0 - 4.5.0 | 4.5.1\nSystem.Text.Encodings.Web |  4.6.0-4.7.1 | 4.7.2\nSystem.Text.Encodings.Web | 5.0.0 |  5.0.1\n\n\nPlease validate that each of the .NET versions you are using is in support. Security updates are only provided for supported .NET versions.\n\n",
					"cve": "BIT-2021-26701,BIT-dotnet-2021-26701,BIT-dotnet-sdk-2021-26701,CVE-2021-26701",
					"severity": "CRITICAL",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Newtonsoft.Json@10.0.2",
			"vulnerabilities": [
				{
					"id": "CWE-755",
					"title": "Improper Handling of Exceptional Conditions in Newtonsoft.Json",
					"description": "Newtonsoft.Json prior to version 13.0.1 is vulnerable to Insecure Defaults due to improper handling of expressions with high nesting level that lead to StackOverFlow exception or high CPU and RAM usage. Exploiting this vulnerability results in Denial Of Service (DoS). \n\nThe serialization and deserialization path have different properties regarding the issue.\n\nDeserializing methods (like `JsonConvert.DeserializeObject`) will process the input that results in burning the CPU, allocating memory, and consuming a thread of execution. Quite high nesting level (\u003e10kk, or 9.5MB of `{a:{a:{...` input) is needed to achieve the latency over 10 seconds, depending on the hardware.\n\nSerializing methods (like `JsonConvert.Serialize` or `JObject.ToString`) will throw StackOverFlow exception with the nesting level of around 20k.\n\nTo mitigate the issue one either need to update Newtonsoft.Json to 13.0.1 or set `MaxDepth` parameter in the `JsonSerializerSettings`. This can be done globally with the following statement. After that the parsing of the nested input will fail fast with `Newtonsoft.Json.JsonReaderException`:\n\n``` \nJsonConvert.DefaultSettings = () =\u003e new JsonSerializerSettings { MaxDepth = 128 };\n```\n\nRepro code:\n```\n//Create a string representation of an highly nested object (JSON serialized)\nint nRep = 25000;\nstring json = string.Concat(Enumerable.Repeat(\"{a:\", nRep)) + \"1\" +\n string.Concat(Enumerable.Repeat(\"}\", nRep));\n\n//Parse this object (leads to high CPU/RAM consumption)\nvar parsedJson = JsonConvert.DeserializeObject(json);\n\n// Methods below all throw stack overflow with nRep around 20k and higher\n// string a = parsedJson.ToString();\n// string b = JsonConvert.SerializeObject(parsedJson);\n```\n\n### Additional affected product and version information\n**The original statement about the problem only affecting IIS applications is misleading.** Any application is affected, however the IIS has a behavior that stops restarting the instance after some time resulting in a harder-to-fix DoS.**",
					"cwe": "CWE-755",
					"severity": "HIGH",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Net.Http@4.3.0",
			"vulnerabilities": [
				{
					"id": "CVE-2018-8292",
					"title": ".NET Core Information Disclosure",
					"description": "An information disclosure vulnerability exists in .NET Core when authentication information is inadvertently exposed in a redirect, aka \".NET Core Information Disclosure Vulnerability.\" This affects .NET Core 2.1, .NET Core 1.0, .NET Core 1.1, PowerShell Core 6.0.",
					"cwe": "CWE-200",
					"cve": "CVE-2018-8292",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2018-8292",
						"epss": "0.025470000",
						"percentile": "0.890510000",
						"date": "2023-11-22"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Azure.Identity@1.8.2",
			"vulnerabilities": [
				{
					"id": "CVE-2023-36414",
					"title": "Azure Identity SDK Remote Code Execution Vulnerability",
					"description": "Azure Identity SDK is vulnerable to remote code execution.",
					"cve": "CVE-2023-36414",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2023-36414",
						"epss": "0.001890000",
						"percentile": "0.563620000",
						"date": "2023-11-22"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Net.Http@4.1.0",
			"vulnerabilities": [
				{
					"id": "CVE-2018-8292",
					"title": ".NET Core Information Disclosure",
					"description": "An information disclosure vulnerability exists in .NET Core when authentication information is inadvertently exposed in a redirect, aka \".NET Core Information Disclosure Vulnerability.\" This affects .NET Core 2.1, .NET Core 1.0, .NET Core 1.1, PowerShell Core 6.0.",
					"cwe": "CWE-200",
					"cve": "CVE-2018-8292",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2018-8292",
						"epss": "0.025470000",
						"percentile": "0.890510000",
						"date": "2023-11-22"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Security.Cryptography.X509Certificates@4.1.0",
			"vulnerabilities": [
				{
					"id": "CVE-2017-11770",
					"title": "Improper Certificate Validation",
					"description": ".NET Core 1.0, 1.1, and 2.0 allow an unauthenticated attacker to remotely cause a denial of service attack against a .NET Core web application by improperly parsing certificate data. A denial of service vulnerability exists when .NET Core improperly handles parsing certificate data, aka \".NET CORE Denial Of Service Vulnerability\".",
					"cwe": "CWE-295",
					"cve": "CVE-2017-11770",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2017-11770",
						"epss": "0.026060000",
						"percentile": "0.891660000",
						"date": "2023-11-22"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Azure.Identity@1.8.0",
			"vulnerabilities": [
				{
					"id": "CVE-2023-36414",
					"title": "Azure Identity SDK Remote Code Execution Vulnerability",
					"description": "Azure Identity SDK is vulnerable to remote code execution.",
					"cve": "CVE-2023-36414",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2023-36414",
						"epss": "0.001890000",
						"percentile": "0.563620000",
						"date": "2023-11-22"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Microsoft.AspNetCore.Server.IIS@2.2.0",
			"vulnerabilities": [
				{
					"id": "CVE-2019-1075",
					"title": "Open redirect in ASP.NET Core",
					"description": "A spoofing vulnerability exists in ASP.NET Core that could lead to an open redirect, aka 'ASP.NET Core Spoofing Vulnerability'.",
					"cwe": "CWE-601",
					"cve": "CVE-2019-1075",
					"severity": "MODERATE",
					"epss": {
						"cve": "CVE-2019-1075",
						"epss": "0.001980000",
						"percentile": "0.575260000",
						"date": "2023-11-22"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Azure.Identity@1.6.0",
			"vulnerabilities": [
				{
					"id": "CVE-2023-36414",
					"title": "Azure Identity SDK Remote Code Execution Vulnerability",
					"description": "Azure Identity SDK is vulnerable to remote code execution.",
					"cve": "CVE-2023-36414",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2023-36414",
						"epss": "0.001890000",
						"percentile": "0.563620000",
						"date": "2023-11-22"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Newtonsoft.Json@10.0.3",
			"vulnerabilities": [
				{
					"id": "CWE-755",
					"title": "Improper Handling of Exceptional Conditions in Newtonsoft.Json",
					"description": "Newtonsoft.Json prior to version 13.0.1 is vulnerable to Insecure Defaults due to improper handling of expressions with high nesting level that lead to StackOverFlow exception or high CPU and RAM usage. Exploiting this vulnerability results in Denial Of Service (DoS). \n\nThe serialization and deserialization path have different properties regarding the issue.\n\nDeserializing methods (like `JsonConvert.DeserializeObject`) will process the input that results in burning the CPU, allocating memory, and consuming a thread of execution. Quite high nesting level (\u003e10kk, or 9.5MB of `{a:{a:{...` input) is needed to achieve the latency over 10 seconds, depending on the hardware.\n\nSerializing methods (like `JsonConvert.Serialize` or `JObject.ToString`) will throw StackOverFlow exception with the nesting level of around 20k.\n\nTo mitigate the issue one either need to update Newtonsoft.Json to 13.0.1 or set `MaxDepth` parameter in the `JsonSerializerSettings`. This can be done globally with the following statement. After that the parsing of the nested input will fail fast with `Newtonsoft.Json.JsonReaderException`:\n\n``` \nJsonConvert.DefaultSettings = () =\u003e new JsonSerializerSettings { MaxDepth = 128 };\n```\n\nRepro code:\n```\n//Create a string representation of an highly nested object (JSON serialized)\nint nRep = 25000;\nstring json = string.Concat(Enumerable.Repeat(\"{a:\", nRep)) + \"1\" +\n string.Concat(Enumerable.Repeat(\"}\", nRep));\n\n//Parse this object (leads to high CPU/RAM consumption)\nvar parsedJson = JsonConvert.DeserializeObject(json);\n\n// Methods below all throw stack overflow with nRep around 20k and higher\n// string a = parsedJson.ToString();\n// string b = JsonConvert.SerializeObject(parsedJson);\n```\n\n### Additional affected product and version information\n**The original statement about the problem only affecting IIS applications is misleading.** Any application is affected, however the IIS has a behavior that stops restarting the instance after some time resulting in a harder-to-fix DoS.**",
					"cwe": "CWE-755",
					"severity": "HIGH",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Azure.Identity@1.7.0",
			"vulnerabilities": [
				{
					"id": "CVE-2023-36414",
					"title": "Azure Identity SDK Remote Code Execution Vulnerability",
					"description": "Azure Identity SDK is vulnerable to remote code execution.",
					"cve": "CVE-2023-36414",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2023-36414",
						"epss": "0.001890000",
						"percentile": "0.563620000",
						"date": "2023-11-22"
					}
				}
			]
		}
	]
}
