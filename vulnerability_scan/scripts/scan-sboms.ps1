#!/usr/bin/env pwsh

$here = Split-Path -Parent $PSCommandPath
$here = Split-Path -Parent $here

$sourceDir = "$here/data/raw"  
$targetDir = "$here/data/raw_flatterned"  

if(!($env:DATALAKE_NAME)){
    Throw "DATALAKE_NAME environment variable is not set or is empty. Please set it before continuing."
}
if(!($env:DATALAKE_SASTOKEN)){
    Throw "DATALAKE_SASTOKEN environment variable is not set or is empty. Please set it before continuing."
}

$folderPath = "$here/data/raw"
if (!(Test-Path $folderPath -PathType Container)) {
    New-Item -ItemType Directory -Force -Path $folderPath
}

$newContext = New-AzStorageContext -StorageAccountName $env:DATALAKE_NAME -SasToken $env:DATALAKE_SASTOKEN
$filesystemName = "data"
$filePath = "data/raw_sboms/*"
$downloadFilePath = "$here/data/raw/"
Get-AzDataLakeGen2ItemContent -Context $newContext -FileSystem $filesystemName -Path $filePath -Destination $downloadFilePath

$colItems =  (get-childitem  "$folderPath" -include *.xlsx* -recurse | tee-object -variable files | measure-object -property length -sum)
$files | foreach-object {write-host $_.FullName}

Write-Host $targetDir

if (-not (Test-Path $targetDir -PathType Container)) {
    New-Item -ItemType Directory -Force -Path $targetDir
}

$jsonFiles = Get-ChildItem -Path $sourceDir -Filter *.json -Recurse

foreach ($file in $jsonFiles) {
    Copy-Item -Path $file.FullName -Destination $targetDir
}

$subDirs = Get-ChildItem -Path $targetDir -Directory

foreach ($dir in $subDirs) {
    Remove-Item -Path $dir.FullName -Recurse -Force
}

$flatternedDirFiles = Get-ChildItem -Path $targetDir -Filter *.json

$fileNames = @()

foreach ($file in $flatternedDirFiles){
    dotnet-covenant convert spdx $file.FullName -o $file.FullName
    $fileNames += $file.name
    Write-Output $file.FullName
    Write-Host "Converted $file to SPDX"
}

$folderPath = "$here/artifacts/scanned_sboms"
if (!(Test-Path $folderPath -PathType Container)) {
    New-Item -ItemType Directory -Force -Path $folderPath
}

$fileNames | ConvertTo-Json | Out-File "$here/artifacts/list_of_files.json"

foreach ($file in $fileNames) {
    New-Item -Path "$here/artifacts/scanned_sboms" -ItemType File -Name "$file"
    trivy sbom "$here/data/raw_flatterned/$file" --format json --output "$here/artifacts/scanned_sboms/$file"
}