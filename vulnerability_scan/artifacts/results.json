{
	"meta": {
		"generator": "bomber",
		"url": "https://github.com/devops-kung-fu/bomber",
		"version": "0.4.4",
		"provider": "osv",
		"date": "2024-02-19T14:52:43.796855Z"
	},
	"files": [
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.AzureFunctionsKeepAlive.sbom-20230731145443527.json",
			"sha256": "fced658e4ce42984a7d3d03d32de5559cfb23840b060111aa242c90190d5ae6e"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.AzureFunctionsKeepAlive.sbom-20230925023013487.json",
			"sha256": "698576f094a4207885de3be6da6279ba1832a6413ae1187b14bd9e25c33a7b92"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.AzureFunctionsKeepAlive.sbom-20230926005207504.json",
			"sha256": "a0a822f337e3065a16c91c0c80fc96977c798edb93c75b52f23188ec2878da56"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.ContentHandling.sbom-20230803021854521.json",
			"sha256": "25569ebb8e643a5cece627a363d2fc8022ba7b164bc41219eeca7a7f1403dc20"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.ContentHandling.sbom-20230927021312061.json",
			"sha256": "b168d96eede840780081d5edf3bfcc7215bb3a598f9d8112813d82dd2438a8bc"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.ContentHandling.sbom-20230927022958777.json",
			"sha256": "c3e99f57837c7b8064e0e3b9071034c60e8dc8aef35e98380fac00a28fc05e9b"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Extensions.System.Text.Json.sbom-20230714141727393.json",
			"sha256": "d0107b27f3298f4e0dd1006a1201daed5670243d8791211ed8222c6b8690763c"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Extensions.System.Text.Json.sbom-20230731141202223.json",
			"sha256": "e7f18d377ffa227e67c4c7079b049e668283e11dbba30db099f2bf15ccee1808"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Extensions.System.Text.Json.sbom-20230807133651423.json",
			"sha256": "cb754948989a3a730720c987432f26f6b78336156e1da78057cf9465fa0d6215"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Extensions.sbom-20230925124952113.json",
			"sha256": "4e71dc5cacf18d2421a3af03ec30785bd331b8e8f0c3033a550c84c1d83efe5a"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Extensions.sbom-20230925125539544.json",
			"sha256": "0512840394401704c8248cc55e0fbdc947abad8af2acf97db2e6bc165a332191"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Extensions.sbom-20230927021217870.json",
			"sha256": "6dfb66d7aa6de905819443431ebbee33721284a8d159f494b3862b491cb01e01"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Globbing.sbom-20230925021641016.json",
			"sha256": "e539325ed59520914a525a93002ff02508291351a22aa1f52724a175e7e1a3ee"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Globbing.sbom-20230927021755450.json",
			"sha256": "b4b6c15a9156b3ba54503c034abaec60313aabe3ff9b81cc9a00ddd63c627f36"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Globbing.sbom-20230927022310790.json",
			"sha256": "f28ee530a5b793c8c03ef62d7fb822df151ee78f11fa19a948fec4c3757d351e"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Json.sbom-20230802021609249.json",
			"sha256": "f8869feb0a964a27c631675163ea6572f82b50012337a702b7e96f8dc947d148"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Json.sbom-20230803021801566.json",
			"sha256": "c850bf949a8a2f40e76ccc73dafe0a84b2d2c278cbaff716293a28093fa33cdb"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Json.sbom-20230925021331846.json",
			"sha256": "4226a2eb1ae5ee570b7b874e903f47bec014ade5acd517a060132276078427ee"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.JsonSchema.sbom-20231018071822430.json",
			"sha256": "f90ec08da1cf7f8929c259602d209c7e480d6e0b0965da8660a80b2ab2c4224f"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.JsonSchema.sbom-20231024080024899.json",
			"sha256": "3d8558fea4fb19c723eb2fe6cba969d3e2cb1aad0f2b8ff2dff88eb58218f054"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.JsonSchema.sbom-20231025075047582.json",
			"sha256": "b5d83d02670c8afe21a1673dde2d42cae2da2101da5e92f79ce604717c17b8f6"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Leasing.sbom-20231007124310090.json",
			"sha256": "d0ce35c1d2232c849e499caaf2999c18e700e6cade572c9f5e3de68c933d9544"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Leasing.sbom-20231018133339741.json",
			"sha256": "3c8b14756a32b58fdbbd2c960df4bb1413854fc84ab8169cdecd9cb46b05e3a9"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Leasing.sbom-20231018133701514.json",
			"sha256": "86515a7fd61ec3ab556181d4cfbf9340465ca1b56746daf1082a7502886d059e"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Monitoring.sbom-20230925021343358.json",
			"sha256": "d30dd52c48f94664e9cac020f071b2e72e159ea0ad36c3692a84fd579eff87e7"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Monitoring.sbom-20230927021528451.json",
			"sha256": "0aa479f8f271ef16001fca2aa7ad8127e3810747449efc7378aff6d32600be83"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Monitoring.sbom-20230927021709610.json",
			"sha256": "805fec16b3cb2ff8e2c5cdf2bd7e9ac1a8af4a821698dad61c3b76aa26e1ce5f"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Retry.sbom-20230802021549215.json",
			"sha256": "6d1cf0062a87a95ccbad3c7caac8263793274c1a0932578d460e7f03be92106b"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Retry.sbom-20230925125954595.json",
			"sha256": "e5730e1f192c3ba68fa108adfcc059e5317554c799031295c418094c72b7b5b1"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.Retry.sbom-20230925130521136.json",
			"sha256": "ad31cbff5699e178288e357e40a675987f20e7ec543196c23c791e3c728f3ddf"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.UriTemplates.sbom-20231013155844800.json",
			"sha256": "993f0f3487b59338670c24dd47fcc13b062fb1f4cb3c6b36492f7d946a7c1164"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.UriTemplates.sbom-20231024155652770.json",
			"sha256": "6552174a694d54a4750b0a3ab3a11ac02fb1a998ac87597f2c6e211b8aa02d37"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Corvus.UriTemplates.sbom-20231026155117317.json",
			"sha256": "4c396dd349302b41068662a60b86b9c91e5f961bb6ad60882de14c314d9cc156"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Claims.sbom-20230925152701828.json",
			"sha256": "247264295a1968f713681e1f7888a659a3aee3ff28e9b37cc66d322fb47c0cdc"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Claims.sbom-20231002161804330.json",
			"sha256": "c5adc7e59095e9d337b292c80e0d4d576190a0178eb60b21ec51b7fe648cb5bf"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Claims.sbom-20231002164058654.json",
			"sha256": "d3b4e8149622dd59d8ce65f05f40896470d29ac12271ab4ce1b95c16783c687c"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Operations.sbom-20230925121312215.json",
			"sha256": "f7ae802558689b9dd60c099b20850a572af4e12157c4900a2148e0c95c89ad63"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Operations.sbom-20230925121354442.json",
			"sha256": "f20797c176064402676aa09c7dd5aec1b260fe4a7cbfd01d7ee4b121a69723bf"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Operations.sbom-20230927022336918.json",
			"sha256": "cc9c1dd0612e2316b15b4d488a22d700fe27338a936bcd5c71eede249a4cfd4f"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Tenancy.sbom-20230922163414724.json",
			"sha256": "01c11999d9e0b880a3b82d9ce4f3c9bb27db21bbfb42a6b08268288e16e87737"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Tenancy.sbom-20230925022435177.json",
			"sha256": "fef15bf42a2c2101794836ae6608720dfa29d623929d96c1526c7bf36e48893f"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Tenancy.sbom-20230925024911502.json",
			"sha256": "5f2e97b77f2f90e92acab8f51b6a845072024b71f72e7a3442e23a7915990248"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.TenantManagement.sbom-20230926083515409.json",
			"sha256": "26477ccccce0d49c0a13d32640d79268ff76c96ca38b10644698660607046499"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.TenantManagement.sbom-20230927021739482.json",
			"sha256": "e478063c45abfc7740bd18bd893ff2bfc64416f63bd392035670545b1a091ae2"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.TenantManagement.sbom-20230927082242823.json",
			"sha256": "e3b74d000f235041bbb3348cddb6e7b5d11dfa1a3cf2f9d2bb97485dc7915e65"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.UserNotifications.sbom-20230313115752967.json",
			"sha256": "2861cb2509825ea5e84a9264842fffb40b9789a936f65ac878e09fb331b97fdc"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.UserNotifications.sbom-20230313122434134.json",
			"sha256": "78596c0b0a9082d7c456b506ac4e96aa5cccce4462fbe4b0082524e5248650bd"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.UserNotifications.sbom-20230714140818507.json",
			"sha256": "719f3d226a56bb870ce918cbf053f11c0f024bb7644df1b7aca60e659f0f0ed3"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Workflow.sbom-20230913024351535.json",
			"sha256": "eb4f029c39f7dd138d4d9ed1c924fec46e54b3d076996af6efa826a7a8db3456"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Workflow.sbom-20231018030131154.json",
			"sha256": "9c532997344976e8983ae5a89854b1fd3f38980c77646554a648087b0e1f1093"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Marain.Workflow.sbom-20231020021055256.json",
			"sha256": "377b6af0a01c239913a7f191051d8a09aa0b81f34d6b0c3403f9ea4df5d67865"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Menes.sbom-20230927023952519.json",
			"sha256": "797b027d5c7da14f7411b74007375870b69e8d6f77635550be1cfa19f5e298ff"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Menes.sbom-20230927081724280.json",
			"sha256": "2e57761a7d9bb21e378b413bf42e9f897739e93406e60276cc58b8a113a57b28"
		},
		{
			"name": "/Users/Charlotte/Documents/repos/infestigate/vulnerability_scan/data/raw_flatterned/Menes.sbom-20231019081033177.json",
			"sha256": "35ae48f028cf3c24dc4aa7f9eb0a911e4502cf642c6166375990969bef294755"
		}
	],
	"summary": {
		"Unspecified": 0,
		"Low": 0,
		"Moderate": 10,
		"High": 14,
		"Critical": 3
	},
	"packages": [
		{
			"coordinates": "pkg:nuget/Microsoft.Rest.ClientRuntime@2.3.23",
			"vulnerabilities": [
				{
					"id": "CVE-2022-26907",
					"title": "Azure SDK for .NET Information Disclosure Vulnerability.",
					"description": "Azure SDK for .NET Information Disclosure Vulnerability via undisclosed methods relating to lack of sanitization of exception messages.",
					"cwe": "CWE-532",
					"cve": "CVE-2022-26907",
					"severity": "MODERATE",
					"epss": {
						"cve": "CVE-2022-26907",
						"epss": "0.004900000",
						"percentile": "0.754330000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Newtonsoft.Json@11.0.2",
			"vulnerabilities": [
				{
					"id": "CVE-2024-21907",
					"title": "Improper Handling of Exceptional Conditions in Newtonsoft.Json",
					"description": "Newtonsoft.Json prior to version 13.0.1 is vulnerable to Insecure Defaults due to improper handling of expressions with high nesting level that lead to StackOverFlow exception or high CPU and RAM usage. Exploiting this vulnerability results in Denial Of Service (DoS). \n\nThe serialization and deserialization path have different properties regarding the issue.\n\nDeserializing methods (like `JsonConvert.DeserializeObject`) will process the input that results in burning the CPU, allocating memory, and consuming a thread of execution. Quite high nesting level (\u003e10kk, or 9.5MB of `{a:{a:{...` input) is needed to achieve the latency over 10 seconds, depending on the hardware.\n\nSerializing methods (like `JsonConvert.Serialize` or `JObject.ToString`) will throw StackOverFlow exception with the nesting level of around 20k.\n\nTo mitigate the issue one either need to update Newtonsoft.Json to 13.0.1 or set `MaxDepth` parameter in the `JsonSerializerSettings`. This can be done globally with the following statement. After that the parsing of the nested input will fail fast with `Newtonsoft.Json.JsonReaderException`:\n\n``` \nJsonConvert.DefaultSettings = () =\u003e new JsonSerializerSettings { MaxDepth = 128 };\n```\n\nRepro code:\n```\n//Create a string representation of an highly nested object (JSON serialized)\nint nRep = 25000;\nstring json = string.Concat(Enumerable.Repeat(\"{a:\", nRep)) + \"1\" +\n string.Concat(Enumerable.Repeat(\"}\", nRep));\n\n//Parse this object (leads to high CPU/RAM consumption)\nvar parsedJson = JsonConvert.DeserializeObject(json);\n\n// Methods below all throw stack overflow with nRep around 20k and higher\n// string a = parsedJson.ToString();\n// string b = JsonConvert.SerializeObject(parsedJson);\n```\n\n### Additional affected product and version information\n**The original statement about the problem only affecting IIS applications is misleading.** Any application is affected, however the IIS has a behavior that stops restarting the instance after some time resulting in a harder-to-fix DoS.**",
					"cwe": "CWE-755",
					"cve": "CVE-2024-21907",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2024-21907",
						"epss": "0.002580000",
						"percentile": "0.646200000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Text.Encodings.Web@4.5.0",
			"vulnerabilities": [
				{
					"id": "BIT-dotnet-2021-26701,BIT-dotnet-sdk-2021-26701,CVE-2021-26701",
					"title": ".NET Core Remote Code Execution Vulnerability",
					"description": ".NET Core Remote Code Execution Vulnerability This CVE ID is unique from CVE-2021-24112.\n\n### Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1, and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA remote code execution vulnerability exists in .NET 5 and .NET Core due to how text encoding is performed.\n\n### Discussion\n\nDiscussion for this issue can be found at dotnet/runtime#49377\n\n### Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n### Affected software\n\nThe vulnerable package is `System.Text.Encodings.Web` . Upgrading your package and redeploying your app should be sufficient to address this vulnerability.\n\nVulnerable package versions:\n\nAny .NET 5, .NET Core, or .NET Framework based application that uses the System.Text.Encodings.Web package with a vulnerable version listed below.\n\nPackage Name | Vulnerable Versions | Secure Versions\n-|-|-\nSystem.Text.Encodings.Web | 4.0.0 - 4.5.0 | 4.5.1\nSystem.Text.Encodings.Web |  4.6.0-4.7.1 | 4.7.2\nSystem.Text.Encodings.Web | 5.0.0 |  5.0.1\n\n\nPlease validate that each of the .NET versions you are using is in support. Security updates are only provided for supported .NET versions.\n\n",
					"cve": "BIT-dotnet-2021-26701,BIT-dotnet-sdk-2021-26701,CVE-2021-26701",
					"severity": "CRITICAL",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Text.RegularExpressions@4.3.0",
			"vulnerabilities": [
				{
					"id": "CVE-2019-0820",
					"title": "Regular Expression Denial of Service in System.Text.RegularExpressions",
					"description": "A denial of service vulnerability exists when .NET Framework and .NET Core improperly process RegEx strings, aka '.NET Framework and .NET Core Denial of Service Vulnerability'. This CVE ID is unique from CVE-2019-0980, CVE-2019-0981.",
					"cwe": "CWE-1333,CWE-400",
					"cve": "CVE-2019-0820",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2019-0820",
						"epss": "0.001590000",
						"percentile": "0.512130000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Newtonsoft.Json@9.0.1",
			"vulnerabilities": [
				{
					"id": "CVE-2024-21907",
					"title": "Improper Handling of Exceptional Conditions in Newtonsoft.Json",
					"description": "Newtonsoft.Json prior to version 13.0.1 is vulnerable to Insecure Defaults due to improper handling of expressions with high nesting level that lead to StackOverFlow exception or high CPU and RAM usage. Exploiting this vulnerability results in Denial Of Service (DoS). \n\nThe serialization and deserialization path have different properties regarding the issue.\n\nDeserializing methods (like `JsonConvert.DeserializeObject`) will process the input that results in burning the CPU, allocating memory, and consuming a thread of execution. Quite high nesting level (\u003e10kk, or 9.5MB of `{a:{a:{...` input) is needed to achieve the latency over 10 seconds, depending on the hardware.\n\nSerializing methods (like `JsonConvert.Serialize` or `JObject.ToString`) will throw StackOverFlow exception with the nesting level of around 20k.\n\nTo mitigate the issue one either need to update Newtonsoft.Json to 13.0.1 or set `MaxDepth` parameter in the `JsonSerializerSettings`. This can be done globally with the following statement. After that the parsing of the nested input will fail fast with `Newtonsoft.Json.JsonReaderException`:\n\n``` \nJsonConvert.DefaultSettings = () =\u003e new JsonSerializerSettings { MaxDepth = 128 };\n```\n\nRepro code:\n```\n//Create a string representation of an highly nested object (JSON serialized)\nint nRep = 25000;\nstring json = string.Concat(Enumerable.Repeat(\"{a:\", nRep)) + \"1\" +\n string.Concat(Enumerable.Repeat(\"}\", nRep));\n\n//Parse this object (leads to high CPU/RAM consumption)\nvar parsedJson = JsonConvert.DeserializeObject(json);\n\n// Methods below all throw stack overflow with nRep around 20k and higher\n// string a = parsedJson.ToString();\n// string b = JsonConvert.SerializeObject(parsedJson);\n```\n\n### Additional affected product and version information\n**The original statement about the problem only affecting IIS applications is misleading.** Any application is affected, however the IIS has a behavior that stops restarting the instance after some time resulting in a harder-to-fix DoS.**",
					"cwe": "CWE-755",
					"cve": "CVE-2024-21907",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2024-21907",
						"epss": "0.002580000",
						"percentile": "0.646200000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Text.Encodings.Web@4.7.1",
			"vulnerabilities": [
				{
					"id": "BIT-dotnet-2021-26701,BIT-dotnet-sdk-2021-26701,CVE-2021-26701",
					"title": ".NET Core Remote Code Execution Vulnerability",
					"description": ".NET Core Remote Code Execution Vulnerability This CVE ID is unique from CVE-2021-24112.\n\n### Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 5.0, .NET Core 3.1, and .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA remote code execution vulnerability exists in .NET 5 and .NET Core due to how text encoding is performed.\n\n### Discussion\n\nDiscussion for this issue can be found at dotnet/runtime#49377\n\n### Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n### Affected software\n\nThe vulnerable package is `System.Text.Encodings.Web` . Upgrading your package and redeploying your app should be sufficient to address this vulnerability.\n\nVulnerable package versions:\n\nAny .NET 5, .NET Core, or .NET Framework based application that uses the System.Text.Encodings.Web package with a vulnerable version listed below.\n\nPackage Name | Vulnerable Versions | Secure Versions\n-|-|-\nSystem.Text.Encodings.Web | 4.0.0 - 4.5.0 | 4.5.1\nSystem.Text.Encodings.Web |  4.6.0-4.7.1 | 4.7.2\nSystem.Text.Encodings.Web | 5.0.0 |  5.0.1\n\n\nPlease validate that each of the .NET versions you are using is in support. Security updates are only provided for supported .NET versions.\n\n",
					"cve": "BIT-dotnet-2021-26701,BIT-dotnet-sdk-2021-26701,CVE-2021-26701",
					"severity": "CRITICAL",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Newtonsoft.Json@10.0.2",
			"vulnerabilities": [
				{
					"id": "CVE-2024-21907",
					"title": "Improper Handling of Exceptional Conditions in Newtonsoft.Json",
					"description": "Newtonsoft.Json prior to version 13.0.1 is vulnerable to Insecure Defaults due to improper handling of expressions with high nesting level that lead to StackOverFlow exception or high CPU and RAM usage. Exploiting this vulnerability results in Denial Of Service (DoS). \n\nThe serialization and deserialization path have different properties regarding the issue.\n\nDeserializing methods (like `JsonConvert.DeserializeObject`) will process the input that results in burning the CPU, allocating memory, and consuming a thread of execution. Quite high nesting level (\u003e10kk, or 9.5MB of `{a:{a:{...` input) is needed to achieve the latency over 10 seconds, depending on the hardware.\n\nSerializing methods (like `JsonConvert.Serialize` or `JObject.ToString`) will throw StackOverFlow exception with the nesting level of around 20k.\n\nTo mitigate the issue one either need to update Newtonsoft.Json to 13.0.1 or set `MaxDepth` parameter in the `JsonSerializerSettings`. This can be done globally with the following statement. After that the parsing of the nested input will fail fast with `Newtonsoft.Json.JsonReaderException`:\n\n``` \nJsonConvert.DefaultSettings = () =\u003e new JsonSerializerSettings { MaxDepth = 128 };\n```\n\nRepro code:\n```\n//Create a string representation of an highly nested object (JSON serialized)\nint nRep = 25000;\nstring json = string.Concat(Enumerable.Repeat(\"{a:\", nRep)) + \"1\" +\n string.Concat(Enumerable.Repeat(\"}\", nRep));\n\n//Parse this object (leads to high CPU/RAM consumption)\nvar parsedJson = JsonConvert.DeserializeObject(json);\n\n// Methods below all throw stack overflow with nRep around 20k and higher\n// string a = parsedJson.ToString();\n// string b = JsonConvert.SerializeObject(parsedJson);\n```\n\n### Additional affected product and version information\n**The original statement about the problem only affecting IIS applications is misleading.** Any application is affected, however the IIS has a behavior that stops restarting the instance after some time resulting in a harder-to-fix DoS.**",
					"cwe": "CWE-755",
					"cve": "CVE-2024-21907",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2024-21907",
						"epss": "0.002580000",
						"percentile": "0.646200000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Net.Http@4.3.0",
			"vulnerabilities": [
				{
					"id": "CVE-2018-8292",
					"title": ".NET Core Information Disclosure",
					"description": "An information disclosure vulnerability exists in .NET Core when authentication information is inadvertently exposed in a redirect, aka \".NET Core Information Disclosure Vulnerability.\" This affects .NET Core 2.1, .NET Core 1.0, .NET Core 1.1, PowerShell Core 6.0.",
					"cwe": "CWE-200",
					"cve": "CVE-2018-8292",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2018-8292",
						"epss": "0.025470000",
						"percentile": "0.898520000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Azure.Identity@1.8.2",
			"vulnerabilities": [
				{
					"id": "CVE-2023-36414",
					"title": "Azure Identity SDK Remote Code Execution Vulnerability",
					"description": "Azure Identity SDK is vulnerable to remote code execution.",
					"cve": "CVE-2023-36414",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2023-36414",
						"epss": "0.001910000",
						"percentile": "0.555520000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/NuGet.Packaging@6.6.1",
			"vulnerabilities": [
				{
					"id": "BIT-dotnet-2024-0057,BIT-dotnet-sdk-2024-0057,CVE-2024-0057",
					"title": "NuGet Client Security Feature Bypass Vulnerability ",
					"description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability. \n\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic. \n\n### Affected software\n#### NuGet \u0026 NuGet Packages\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier. \n\n#### .NET SDK(s)\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\n- Any .NET SDK 8.0.101 or earlier.\n \n### Patches\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs. \n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe. \n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe. \n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe. \n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe. \n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe. \n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe. \n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe. \n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0 . \n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0 . \n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0 . \n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/71 \n\nMSRC details for this can be found at [CVE-2024-0057 - Security Update Guide - Microsoft - NET, .NET Framework, and Visual Studio Security Feature Bypass Vulnerability](https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-0057)\n",
					"cve": "BIT-dotnet-2024-0057,BIT-dotnet-sdk-2024-0057,CVE-2024-0057",
					"severity": "CRITICAL",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Net.Http@4.1.0",
			"vulnerabilities": [
				{
					"id": "CVE-2018-8292",
					"title": ".NET Core Information Disclosure",
					"description": "An information disclosure vulnerability exists in .NET Core when authentication information is inadvertently exposed in a redirect, aka \".NET Core Information Disclosure Vulnerability.\" This affects .NET Core 2.1, .NET Core 1.0, .NET Core 1.1, PowerShell Core 6.0.",
					"cwe": "CWE-200",
					"cve": "CVE-2018-8292",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2018-8292",
						"epss": "0.025470000",
						"percentile": "0.898520000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.Security.Cryptography.X509Certificates@4.1.0",
			"vulnerabilities": [
				{
					"id": "CVE-2017-11770",
					"title": "Improper Certificate Validation",
					"description": ".NET Core 1.0, 1.1, and 2.0 allow an unauthenticated attacker to remotely cause a denial of service attack against a .NET Core web application by improperly parsing certificate data. A denial of service vulnerability exists when .NET Core improperly handles parsing certificate data, aka \".NET CORE Denial Of Service Vulnerability\".",
					"cwe": "CWE-295",
					"cve": "CVE-2017-11770",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2017-11770",
						"epss": "0.026060000",
						"percentile": "0.899560000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Azure.Identity@1.8.0",
			"vulnerabilities": [
				{
					"id": "CVE-2023-36414",
					"title": "Azure Identity SDK Remote Code Execution Vulnerability",
					"description": "Azure Identity SDK is vulnerable to remote code execution.",
					"cve": "CVE-2023-36414",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2023-36414",
						"epss": "0.001910000",
						"percentile": "0.555520000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Microsoft.AspNetCore.Server.IIS@2.2.0",
			"vulnerabilities": [
				{
					"id": "CVE-2019-1075",
					"title": "Open redirect in ASP.NET Core",
					"description": "A spoofing vulnerability exists in ASP.NET Core that could lead to an open redirect, aka 'ASP.NET Core Spoofing Vulnerability'.",
					"cwe": "CWE-601",
					"cve": "CVE-2019-1075",
					"severity": "MODERATE",
					"epss": {
						"cve": "CVE-2019-1075",
						"epss": "0.001980000",
						"percentile": "0.563950000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Azure.Identity@1.6.0",
			"vulnerabilities": [
				{
					"id": "CVE-2023-36414",
					"title": "Azure Identity SDK Remote Code Execution Vulnerability",
					"description": "Azure Identity SDK is vulnerable to remote code execution.",
					"cve": "CVE-2023-36414",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2023-36414",
						"epss": "0.001910000",
						"percentile": "0.555520000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Newtonsoft.Json@10.0.3",
			"vulnerabilities": [
				{
					"id": "CVE-2024-21907",
					"title": "Improper Handling of Exceptional Conditions in Newtonsoft.Json",
					"description": "Newtonsoft.Json prior to version 13.0.1 is vulnerable to Insecure Defaults due to improper handling of expressions with high nesting level that lead to StackOverFlow exception or high CPU and RAM usage. Exploiting this vulnerability results in Denial Of Service (DoS). \n\nThe serialization and deserialization path have different properties regarding the issue.\n\nDeserializing methods (like `JsonConvert.DeserializeObject`) will process the input that results in burning the CPU, allocating memory, and consuming a thread of execution. Quite high nesting level (\u003e10kk, or 9.5MB of `{a:{a:{...` input) is needed to achieve the latency over 10 seconds, depending on the hardware.\n\nSerializing methods (like `JsonConvert.Serialize` or `JObject.ToString`) will throw StackOverFlow exception with the nesting level of around 20k.\n\nTo mitigate the issue one either need to update Newtonsoft.Json to 13.0.1 or set `MaxDepth` parameter in the `JsonSerializerSettings`. This can be done globally with the following statement. After that the parsing of the nested input will fail fast with `Newtonsoft.Json.JsonReaderException`:\n\n``` \nJsonConvert.DefaultSettings = () =\u003e new JsonSerializerSettings { MaxDepth = 128 };\n```\n\nRepro code:\n```\n//Create a string representation of an highly nested object (JSON serialized)\nint nRep = 25000;\nstring json = string.Concat(Enumerable.Repeat(\"{a:\", nRep)) + \"1\" +\n string.Concat(Enumerable.Repeat(\"}\", nRep));\n\n//Parse this object (leads to high CPU/RAM consumption)\nvar parsedJson = JsonConvert.DeserializeObject(json);\n\n// Methods below all throw stack overflow with nRep around 20k and higher\n// string a = parsedJson.ToString();\n// string b = JsonConvert.SerializeObject(parsedJson);\n```\n\n### Additional affected product and version information\n**The original statement about the problem only affecting IIS applications is misleading.** Any application is affected, however the IIS has a behavior that stops restarting the instance after some time resulting in a harder-to-fix DoS.**",
					"cwe": "CWE-755",
					"cve": "CVE-2024-21907",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2024-21907",
						"epss": "0.002580000",
						"percentile": "0.646200000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Microsoft.IdentityModel.JsonWebTokens@5.6.0",
			"vulnerabilities": [
				{
					"id": "NOT PROVIDED",
					"title": "Microsoft Security Advisory CVE-2024-21319: .NET Denial of Service Vulnerability",
					"description": "# Microsoft Security Advisory CVE-2024-21319: .NET Denial of Service Vulnerability\n\n## \u003ca name=\"executive-summary\"\u003e\u003c/a\u003eExecutive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the ASP.NET Core project templates. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nA Denial of Service vulnerability exists in ASP.NET Core project templates which utilize JWT-based authentication tokens. This vulnerability allows an unauthenticated client to consume arbitrarily large amounts of server memory, potentially triggering an out-of-memory condition on the server and making the server no longer able to respond to legitimate requests. \n\n## Announcement\n\nAnnouncement for this issue can be found at  https://github.com/dotnet/announcements/issues/290\n\n### \u003ca name=\"mitigation-factors\"\u003e\u003c/a\u003eMitigation factors\n\nThis impacts only .NET Core-based projects that were created using any version of project templates listed in [affected software](#affected-software). \nOther project templates e.g., console applications, MAUI applications, Windows Forms or WPF applications, are not affected.\n\n\n## \u003ca name=\"affected-software\"\u003e\u003c/a\u003eAffected software\n\nThis impacts only .NET Core-based projects that were created using any version of the below project templates.\n\n-\tASP.NET Core Web App (Model-View-Controller)\n-\tASP.NET Core Web API\n-\tASP.NET Core Web App (Razor Pages)\n-\tBlazor Server App\n-\tBlazor WebAssembly App\n\n\n## Advisory FAQ\n\n### \u003ca name=\"how-affected\"\u003e\u003c/a\u003eHow do I know if I am affected?\n\nIf you are you using project templates listed in [affected software](#affected-software), you may be exposed to the vulnerability.\n\n### \u003ca name=\"how-fix\"\u003e\u003c/a\u003eHow do I fix the issue?\n\n#### For existing projects:\nIf you ever created any of these projects via the dotnet new command or via Visual Studio's File -\u003e New Project gesture, and if you enabled federated authentication at project creation time, your project may be vulnerable. To remediate the vulnerability, use your package manager to update any references you may have to the Microsoft.AspNetCore.Authentication.JwtBearer, Microsoft.AspNetCore.Authentication.OpenIdConnect, and Microsoft.IdentityModel.JsonWebTokens packages to their respective latest versions. \n- [Microsoft.AspNetCore.Authentication.JwtBearer](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.JwtBearer/) \n- [Microsoft.AspNetCore.Authentication.OpenIdConnect](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.OpenIdConnect/) \n\nIf your project does not reference any of those three packages, you are not exposed to this vulnerability.\n\n#### For new projects:\nTo remediate this issue please update to the latest SDK listed below. Simply installing the SDK update is not sufficient to remediate projects already-created / already-deployed projects which existed prior to this update being released.\n\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you are using one of the affected packages, please update to the patched version listed above.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   7.0.200\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.300\\\n\nHost (useful for support):\n\n  Version: 76.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 8.0, you should download and install .NET 8.0.101 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\n* If you're using .NET 7.0, you should download and install .NET SDK 7.0.115 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n* If you're using .NET 6.0, you should download and install .NET SDK 6.0.321 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 6.0, .NET 7.0, .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update \u0026 Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core \u0026 .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at \u003chttps://aka.ms/corebounty\u003e.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### Acknowledgement\n\nMorgan Brown, Microsoft Corp.\n\n### External Links\n\n[CVE-2024-21319]( https://www.cve.org/CVERecord?id=CVE-2024-21319)\n\n### Revisions\n\nV1.0 (January 09, 2024): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2024-01-09_",
					"severity": "MODERATE",
					"epss": {}
				},
				{
					"id": "BIT-dotnet-2024-21319,BIT-dotnet-sdk-2024-21319,CVE-2024-21319",
					"title": "Microsoft Identity Denial of service vulnerability",
					"description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\nAn attacker could exploit this vulnerability by crafting a malicious JSON Web Encryption (JWE) token with a high compression ratio. This token, when processed by a server, leads to excessive memory allocation and processing time during decompression, causing a denial-of-service (DoS) condition.\n\nIt's important to note that the attacker must have access to the public encrypt key registered with the IDP(Entra ID) for successful exploitation.\n\n_According to the CVSS metric, a successful exploitation could lead to a scope change (S:C). What does this mean for this vulnerability?_\nA scope change (S:C) in the CVSS metric indicates that successful exploitation of this vulnerability could extend beyond the immediate processing of malicious tokens, affecting the overall availability of the system by causing a denial-of-service (DoS) condition.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\nThe vulnerability has been fixed. Users should update **all** their Microsoft.IdentityModel versions to 7.1.2 (for 7x) or higher, 6.34.0 (for 6x) or higher, and 5.7.0 (for 5x).\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\nNo, users must upgrade.\n\n### References\n_Are there any links users can visit to find out more?_\nhttps://aka.ms/IdentityModel/Jan2024/zip",
					"cve": "BIT-dotnet-2024-21319,BIT-dotnet-sdk-2024-21319,CVE-2024-21319",
					"severity": "MODERATE",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.IdentityModel.Tokens.Jwt@5.6.0",
			"vulnerabilities": [
				{
					"id": "NOT PROVIDED",
					"title": "Microsoft Security Advisory CVE-2024-21319: .NET Denial of Service Vulnerability",
					"description": "# Microsoft Security Advisory CVE-2024-21319: .NET Denial of Service Vulnerability\n\n## \u003ca name=\"executive-summary\"\u003e\u003c/a\u003eExecutive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the ASP.NET Core project templates. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nA Denial of Service vulnerability exists in ASP.NET Core project templates which utilize JWT-based authentication tokens. This vulnerability allows an unauthenticated client to consume arbitrarily large amounts of server memory, potentially triggering an out-of-memory condition on the server and making the server no longer able to respond to legitimate requests. \n\n## Announcement\n\nAnnouncement for this issue can be found at  https://github.com/dotnet/announcements/issues/290\n\n### \u003ca name=\"mitigation-factors\"\u003e\u003c/a\u003eMitigation factors\n\nThis impacts only .NET Core-based projects that were created using any version of project templates listed in [affected software](#affected-software). \nOther project templates e.g., console applications, MAUI applications, Windows Forms or WPF applications, are not affected.\n\n\n## \u003ca name=\"affected-software\"\u003e\u003c/a\u003eAffected software\n\nThis impacts only .NET Core-based projects that were created using any version of the below project templates.\n\n-\tASP.NET Core Web App (Model-View-Controller)\n-\tASP.NET Core Web API\n-\tASP.NET Core Web App (Razor Pages)\n-\tBlazor Server App\n-\tBlazor WebAssembly App\n\n\n## Advisory FAQ\n\n### \u003ca name=\"how-affected\"\u003e\u003c/a\u003eHow do I know if I am affected?\n\nIf you are you using project templates listed in [affected software](#affected-software), you may be exposed to the vulnerability.\n\n### \u003ca name=\"how-fix\"\u003e\u003c/a\u003eHow do I fix the issue?\n\n#### For existing projects:\nIf you ever created any of these projects via the dotnet new command or via Visual Studio's File -\u003e New Project gesture, and if you enabled federated authentication at project creation time, your project may be vulnerable. To remediate the vulnerability, use your package manager to update any references you may have to the Microsoft.AspNetCore.Authentication.JwtBearer, Microsoft.AspNetCore.Authentication.OpenIdConnect, and Microsoft.IdentityModel.JsonWebTokens packages to their respective latest versions. \n- [Microsoft.AspNetCore.Authentication.JwtBearer](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.JwtBearer/) \n- [Microsoft.AspNetCore.Authentication.OpenIdConnect](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.OpenIdConnect/) \n\nIf your project does not reference any of those three packages, you are not exposed to this vulnerability.\n\n#### For new projects:\nTo remediate this issue please update to the latest SDK listed below. Simply installing the SDK update is not sufficient to remediate projects already-created / already-deployed projects which existed prior to this update being released.\n\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you are using one of the affected packages, please update to the patched version listed above.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   7.0.200\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.300\\\n\nHost (useful for support):\n\n  Version: 76.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 8.0, you should download and install .NET 8.0.101 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\n* If you're using .NET 7.0, you should download and install .NET SDK 7.0.115 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n* If you're using .NET 6.0, you should download and install .NET SDK 6.0.321 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 6.0, .NET 7.0, .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update \u0026 Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core \u0026 .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at \u003chttps://aka.ms/corebounty\u003e.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### Acknowledgement\n\nMorgan Brown, Microsoft Corp.\n\n### External Links\n\n[CVE-2024-21319]( https://www.cve.org/CVERecord?id=CVE-2024-21319)\n\n### Revisions\n\nV1.0 (January 09, 2024): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2024-01-09_",
					"severity": "MODERATE",
					"epss": {}
				},
				{
					"id": "BIT-dotnet-2024-21319,BIT-dotnet-sdk-2024-21319,CVE-2024-21319",
					"title": "Microsoft Identity Denial of service vulnerability",
					"description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\nAn attacker could exploit this vulnerability by crafting a malicious JSON Web Encryption (JWE) token with a high compression ratio. This token, when processed by a server, leads to excessive memory allocation and processing time during decompression, causing a denial-of-service (DoS) condition.\n\nIt's important to note that the attacker must have access to the public encrypt key registered with the IDP(Entra ID) for successful exploitation.\n\n_According to the CVSS metric, a successful exploitation could lead to a scope change (S:C). What does this mean for this vulnerability?_\nA scope change (S:C) in the CVSS metric indicates that successful exploitation of this vulnerability could extend beyond the immediate processing of malicious tokens, affecting the overall availability of the system by causing a denial-of-service (DoS) condition.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\nThe vulnerability has been fixed. Users should update **all** their Microsoft.IdentityModel versions to 7.1.2 (for 7x) or higher, 6.34.0 (for 6x) or higher, and 5.7.0 (for 5x).\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\nNo, users must upgrade.\n\n### References\n_Are there any links users can visit to find out more?_\nhttps://aka.ms/IdentityModel/Jan2024/zip",
					"cve": "BIT-dotnet-2024-21319,BIT-dotnet-sdk-2024-21319,CVE-2024-21319",
					"severity": "MODERATE",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Azure.Identity@1.7.0",
			"vulnerabilities": [
				{
					"id": "CVE-2023-36414",
					"title": "Azure Identity SDK Remote Code Execution Vulnerability",
					"description": "Azure Identity SDK is vulnerable to remote code execution.",
					"cve": "CVE-2023-36414",
					"severity": "HIGH",
					"epss": {
						"cve": "CVE-2023-36414",
						"epss": "0.001910000",
						"percentile": "0.555520000",
						"date": "2024-02-19"
					}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Microsoft.Data.SqlClient@5.1.0",
			"vulnerabilities": [
				{
					"id": "BIT-dotnet-2024-0056,BIT-dotnet-sdk-2024-0056,CVE-2024-0056",
					"title": "Microsoft.Data.SqlClient and System.Data.SqlClient vulnerable to SQL Data Provider Security Feature Bypass",
					"description": "Microsoft.Data.SqlClient and System.Data.SqlClient SQL Data Provider Security Feature Bypass Vulnerability",
					"cve": "BIT-dotnet-2024-0056,BIT-dotnet-sdk-2024-0056,CVE-2024-0056",
					"severity": "HIGH",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Microsoft.IdentityModel.JsonWebTokens@6.24.0",
			"vulnerabilities": [
				{
					"id": "NOT PROVIDED",
					"title": "Microsoft Security Advisory CVE-2024-21319: .NET Denial of Service Vulnerability",
					"description": "# Microsoft Security Advisory CVE-2024-21319: .NET Denial of Service Vulnerability\n\n## \u003ca name=\"executive-summary\"\u003e\u003c/a\u003eExecutive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the ASP.NET Core project templates. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nA Denial of Service vulnerability exists in ASP.NET Core project templates which utilize JWT-based authentication tokens. This vulnerability allows an unauthenticated client to consume arbitrarily large amounts of server memory, potentially triggering an out-of-memory condition on the server and making the server no longer able to respond to legitimate requests. \n\n## Announcement\n\nAnnouncement for this issue can be found at  https://github.com/dotnet/announcements/issues/290\n\n### \u003ca name=\"mitigation-factors\"\u003e\u003c/a\u003eMitigation factors\n\nThis impacts only .NET Core-based projects that were created using any version of project templates listed in [affected software](#affected-software). \nOther project templates e.g., console applications, MAUI applications, Windows Forms or WPF applications, are not affected.\n\n\n## \u003ca name=\"affected-software\"\u003e\u003c/a\u003eAffected software\n\nThis impacts only .NET Core-based projects that were created using any version of the below project templates.\n\n-\tASP.NET Core Web App (Model-View-Controller)\n-\tASP.NET Core Web API\n-\tASP.NET Core Web App (Razor Pages)\n-\tBlazor Server App\n-\tBlazor WebAssembly App\n\n\n## Advisory FAQ\n\n### \u003ca name=\"how-affected\"\u003e\u003c/a\u003eHow do I know if I am affected?\n\nIf you are you using project templates listed in [affected software](#affected-software), you may be exposed to the vulnerability.\n\n### \u003ca name=\"how-fix\"\u003e\u003c/a\u003eHow do I fix the issue?\n\n#### For existing projects:\nIf you ever created any of these projects via the dotnet new command or via Visual Studio's File -\u003e New Project gesture, and if you enabled federated authentication at project creation time, your project may be vulnerable. To remediate the vulnerability, use your package manager to update any references you may have to the Microsoft.AspNetCore.Authentication.JwtBearer, Microsoft.AspNetCore.Authentication.OpenIdConnect, and Microsoft.IdentityModel.JsonWebTokens packages to their respective latest versions. \n- [Microsoft.AspNetCore.Authentication.JwtBearer](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.JwtBearer/) \n- [Microsoft.AspNetCore.Authentication.OpenIdConnect](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.OpenIdConnect/) \n\nIf your project does not reference any of those three packages, you are not exposed to this vulnerability.\n\n#### For new projects:\nTo remediate this issue please update to the latest SDK listed below. Simply installing the SDK update is not sufficient to remediate projects already-created / already-deployed projects which existed prior to this update being released.\n\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you are using one of the affected packages, please update to the patched version listed above.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   7.0.200\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.300\\\n\nHost (useful for support):\n\n  Version: 76.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 8.0, you should download and install .NET 8.0.101 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\n* If you're using .NET 7.0, you should download and install .NET SDK 7.0.115 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n* If you're using .NET 6.0, you should download and install .NET SDK 6.0.321 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 6.0, .NET 7.0, .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update \u0026 Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core \u0026 .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at \u003chttps://aka.ms/corebounty\u003e.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### Acknowledgement\n\nMorgan Brown, Microsoft Corp.\n\n### External Links\n\n[CVE-2024-21319]( https://www.cve.org/CVERecord?id=CVE-2024-21319)\n\n### Revisions\n\nV1.0 (January 09, 2024): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2024-01-09_",
					"severity": "MODERATE",
					"epss": {}
				},
				{
					"id": "BIT-dotnet-2024-21319,BIT-dotnet-sdk-2024-21319,CVE-2024-21319",
					"title": "Microsoft Identity Denial of service vulnerability",
					"description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\nAn attacker could exploit this vulnerability by crafting a malicious JSON Web Encryption (JWE) token with a high compression ratio. This token, when processed by a server, leads to excessive memory allocation and processing time during decompression, causing a denial-of-service (DoS) condition.\n\nIt's important to note that the attacker must have access to the public encrypt key registered with the IDP(Entra ID) for successful exploitation.\n\n_According to the CVSS metric, a successful exploitation could lead to a scope change (S:C). What does this mean for this vulnerability?_\nA scope change (S:C) in the CVSS metric indicates that successful exploitation of this vulnerability could extend beyond the immediate processing of malicious tokens, affecting the overall availability of the system by causing a denial-of-service (DoS) condition.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\nThe vulnerability has been fixed. Users should update **all** their Microsoft.IdentityModel versions to 7.1.2 (for 7x) or higher, 6.34.0 (for 6x) or higher, and 5.7.0 (for 5x).\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\nNo, users must upgrade.\n\n### References\n_Are there any links users can visit to find out more?_\nhttps://aka.ms/IdentityModel/Jan2024/zip",
					"cve": "BIT-dotnet-2024-21319,BIT-dotnet-sdk-2024-21319,CVE-2024-21319",
					"severity": "MODERATE",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/System.IdentityModel.Tokens.Jwt@6.24.0",
			"vulnerabilities": [
				{
					"id": "NOT PROVIDED",
					"title": "Microsoft Security Advisory CVE-2024-21319: .NET Denial of Service Vulnerability",
					"description": "# Microsoft Security Advisory CVE-2024-21319: .NET Denial of Service Vulnerability\n\n## \u003ca name=\"executive-summary\"\u003e\u003c/a\u003eExecutive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the ASP.NET Core project templates. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nA Denial of Service vulnerability exists in ASP.NET Core project templates which utilize JWT-based authentication tokens. This vulnerability allows an unauthenticated client to consume arbitrarily large amounts of server memory, potentially triggering an out-of-memory condition on the server and making the server no longer able to respond to legitimate requests. \n\n## Announcement\n\nAnnouncement for this issue can be found at  https://github.com/dotnet/announcements/issues/290\n\n### \u003ca name=\"mitigation-factors\"\u003e\u003c/a\u003eMitigation factors\n\nThis impacts only .NET Core-based projects that were created using any version of project templates listed in [affected software](#affected-software). \nOther project templates e.g., console applications, MAUI applications, Windows Forms or WPF applications, are not affected.\n\n\n## \u003ca name=\"affected-software\"\u003e\u003c/a\u003eAffected software\n\nThis impacts only .NET Core-based projects that were created using any version of the below project templates.\n\n-\tASP.NET Core Web App (Model-View-Controller)\n-\tASP.NET Core Web API\n-\tASP.NET Core Web App (Razor Pages)\n-\tBlazor Server App\n-\tBlazor WebAssembly App\n\n\n## Advisory FAQ\n\n### \u003ca name=\"how-affected\"\u003e\u003c/a\u003eHow do I know if I am affected?\n\nIf you are you using project templates listed in [affected software](#affected-software), you may be exposed to the vulnerability.\n\n### \u003ca name=\"how-fix\"\u003e\u003c/a\u003eHow do I fix the issue?\n\n#### For existing projects:\nIf you ever created any of these projects via the dotnet new command or via Visual Studio's File -\u003e New Project gesture, and if you enabled federated authentication at project creation time, your project may be vulnerable. To remediate the vulnerability, use your package manager to update any references you may have to the Microsoft.AspNetCore.Authentication.JwtBearer, Microsoft.AspNetCore.Authentication.OpenIdConnect, and Microsoft.IdentityModel.JsonWebTokens packages to their respective latest versions. \n- [Microsoft.AspNetCore.Authentication.JwtBearer](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.JwtBearer/) \n- [Microsoft.AspNetCore.Authentication.OpenIdConnect](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.OpenIdConnect/) \n\nIf your project does not reference any of those three packages, you are not exposed to this vulnerability.\n\n#### For new projects:\nTo remediate this issue please update to the latest SDK listed below. Simply installing the SDK update is not sufficient to remediate projects already-created / already-deployed projects which existed prior to this update being released.\n\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you are using one of the affected packages, please update to the patched version listed above.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   7.0.200\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.300\\\n\nHost (useful for support):\n\n  Version: 76.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 8.0, you should download and install .NET 8.0.101 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\n* If you're using .NET 7.0, you should download and install .NET SDK 7.0.115 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n* If you're using .NET 6.0, you should download and install .NET SDK 6.0.321 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 6.0, .NET 7.0, .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update \u0026 Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core \u0026 .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at \u003chttps://aka.ms/corebounty\u003e.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### Acknowledgement\n\nMorgan Brown, Microsoft Corp.\n\n### External Links\n\n[CVE-2024-21319]( https://www.cve.org/CVERecord?id=CVE-2024-21319)\n\n### Revisions\n\nV1.0 (January 09, 2024): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2024-01-09_",
					"severity": "MODERATE",
					"epss": {}
				},
				{
					"id": "BIT-dotnet-2024-21319,BIT-dotnet-sdk-2024-21319,CVE-2024-21319",
					"title": "Microsoft Identity Denial of service vulnerability",
					"description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\nAn attacker could exploit this vulnerability by crafting a malicious JSON Web Encryption (JWE) token with a high compression ratio. This token, when processed by a server, leads to excessive memory allocation and processing time during decompression, causing a denial-of-service (DoS) condition.\n\nIt's important to note that the attacker must have access to the public encrypt key registered with the IDP(Entra ID) for successful exploitation.\n\n_According to the CVSS metric, a successful exploitation could lead to a scope change (S:C). What does this mean for this vulnerability?_\nA scope change (S:C) in the CVSS metric indicates that successful exploitation of this vulnerability could extend beyond the immediate processing of malicious tokens, affecting the overall availability of the system by causing a denial-of-service (DoS) condition.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\nThe vulnerability has been fixed. Users should update **all** their Microsoft.IdentityModel versions to 7.1.2 (for 7x) or higher, 6.34.0 (for 6x) or higher, and 5.7.0 (for 5x).\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\nNo, users must upgrade.\n\n### References\n_Are there any links users can visit to find out more?_\nhttps://aka.ms/IdentityModel/Jan2024/zip",
					"cve": "BIT-dotnet-2024-21319,BIT-dotnet-sdk-2024-21319,CVE-2024-21319",
					"severity": "MODERATE",
					"epss": {}
				}
			]
		},
		{
			"coordinates": "pkg:nuget/Microsoft.Data.SqlClient@5.1.1",
			"vulnerabilities": [
				{
					"id": "BIT-dotnet-2024-0056,BIT-dotnet-sdk-2024-0056,CVE-2024-0056",
					"title": "Microsoft.Data.SqlClient and System.Data.SqlClient vulnerable to SQL Data Provider Security Feature Bypass",
					"description": "Microsoft.Data.SqlClient and System.Data.SqlClient SQL Data Provider Security Feature Bypass Vulnerability",
					"cve": "BIT-dotnet-2024-0056,BIT-dotnet-sdk-2024-0056,CVE-2024-0056",
					"severity": "HIGH",
					"epss": {}
				}
			]
		}
	]
}
