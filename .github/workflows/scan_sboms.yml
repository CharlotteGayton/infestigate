# This is a basic workflow to help you get started with Actions

name: Scan SBOMs CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "*" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  vulnerability-scanner:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Set execute permissions for script
        run: chmod +x ./vulnerability_scan/scripts/scan-sboms.ps1

      - name: Install dependencies
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.50.1
          dotnet tool install -g covenant

      # Runs a single command using the runners shell
      - name: Run PowerShell Script
        run: |
          pwsh ./vulnerability_scan/scripts//flattening-input-data.ps1
          pwsh ./vulnerability_scan/scripts/scan-sboms.ps1

      - name: Upload vulnerability scan results
        uses: actions/upload-artifact@v3
        with:
          name: vulnerability-scan-results
          path: vulnerability_scan/artifacts/*

  analysing-vulnerability-data:
    needs:
      vulnerability-scanner
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download vulnerability scan results 
        uses: actions/download-artifact@v3
        with:
          name: vulnerability-scan-results
          path: analysing_vulnerability_data/scripts/input_data

      - name: Install Dependencies
        run: |
          pip install pandas

      - name: Run Analysing Data Python Script
        run: |
          python3 ./analysing_vulnerability_data/scripts/analysing_data.py

      - name: Create release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          file:  "analysing_vulnerability_data/results/"

  publish-results-to-datalake:
    runs-on: ubuntu-latest
    needs:
      analysing-vulnerability-data
    steps:
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run PowerShell Script
        shell: pwsh
        env:
          DATALAKE_NAME: ${{ vars.DATALAKE_NAME }}
          DATALAKE_SASTOKEN: ${{ secrets.DATALAKE_SASTOKEN }}
        run: |
          pwsh ./publishing_results_to_datalake/publish-results-to-datalake.ps1
          